[

 ;; user
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/email
  :db/index              true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/unique             :db.unique/identity
  :db/doc                "User unique email"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/name
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/unique             :db.unique/identity
  :db/doc                "Optional unique user name, needed for creating new templates, groups and plans."
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/sign-up-timestamp
  :db/index              true
  :db/valueType          :db.type/instant
  :db/cardinality        :db.cardinality/one
  :db/doc                "User sign up date"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/password
  :db/index              true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "User password"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/activation-id
  :db/index              true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/unique             :db.unique/identity
  :db/doc                "User activation id"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/activated?
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "Has the user account been activated?"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/valid-subscription?
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "Does the user have a valid subscription?"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/routine
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/many
  :db/doc                "A user may have several routines"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/template
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/many
  :db/doc                "A user may have several templates"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/group
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/many
  :db/doc                "A user may have several groups"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/plan
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/many
  :db/doc                "A user may have several plans"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/ongoing-plan
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "A user may have an ongoing plan"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/session
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A user has logged sessions"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/setting
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A user has settings"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/interest
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A user can set interests"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/goal
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A user can set goals"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/max-heart-rate
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/one
  :db/doc                "A user may set their maximum heart rate"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/badge
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A user can achieve badges"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :user/movements
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A list of all movements the user has done"
  :db.install/_attribute :db.part/db}

 ;; badge
 {:db/id #db/id[:db.part/user -100] :db/ident :badge/monkey}
 {:db/id #db/id[:db.part/user -101] :db/ident :badge/bear}

 ;; goal
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :goal/name
  :db/index              true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A goal has a name"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :goal/started
  :db/index              true
  :db/valueType          :db.type/instant
  :db/cardinality        :db.cardinality/one
  :db/doc                "Timestamp of when this goal was set"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :goal/ended
  :db/index              true
  :db/valueType          :db.type/instant
  :db/cardinality        :db.cardinality/one
  :db/doc                "Timestamp of when this goal was completed"
  :db.install/_attribute :db.part/db}

 ;; interest
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :interest/name
  :db/index              true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/unique             :db.unique/identity
  :db/doc                "An interest is named uniquely"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :interest/priority
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "An interest has an intereger priority"
  :db.install/_attribute :db.part/db}

 ;; setting
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :setting/view
  :db/index              true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "Which view the user prefers"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :setting/receive-email?
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "The user can opt in and out of receiving email updates"
  :db.install/_attribute :db.part/db}

 ;; template
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :template/title
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "Template title"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :template/created-by
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "A template is created by a unique user, :user/name"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :template/public?
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "Is the template publically available?"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :template/description
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A template might have a description"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :template/background
  :db/index              true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A template might have a custom background image"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :template/part
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A template consists of parts"
  :db.install/_attribute :db.part/db}

 ;; routine
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :routine/name
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A routine has a name"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :routine/created-by
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "A routine is created by a unique user, :user/name"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :routine/public?
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "Is the routine publically available?"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :routine/description
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A routine might have a description"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :routine/movement
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A routine consists of movements"
  :db.install/_attribute :db.part/db}

 ;; group
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :group/title
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "Group title"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :group/created-by
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "A group is created by a unique user, :user/name"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :group/public?
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "Is the group publically available?"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :group/description
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A group might have a description"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :group/template
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A group consists of templates"
  :db.install/_attribute :db.part/db}

 ;; plan
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :plan/title
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "Plan title"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :plan/created-by
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "A plan is created by a unique user, :user/name"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :plan/started
  :db/index              true
  :db/valueType          :db.type/instant
  :db/cardinality        :db.cardinality/one
  :db/doc                "The timestamp of when this plan started"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :plan/ended
  :db/index              true
  :db/valueType          :db.type/instant
  :db/cardinality        :db.cardinality/one
  :db/doc                "The timestamp of when this plan ended"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :plan/public?
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "Is the plan publically available?"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :plan/description
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A plan might have a description"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :plan/completed?
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "Is the plan completed?"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :plan/current-day
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/one
  :db/doc                "An ongoing plan is at a current day"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :plan/day
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A plan consists of many days"
  :db.install/_attribute :db.part/db}

 ;; day
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :day/template
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "Each day consists of zero or more templates"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :day/group
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "Each session of the day may draw the template from a group"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :day/completed?
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "Is the day completed?"
  :db.install/_attribute :db.part/db}

 ;; part
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/title
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A part has a title"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/description
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A part might have a description"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/category
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A part can have several categories"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/practical
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "Should only movements with category Practical Movements be used?"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/time
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "Each part may store may be stored with the time taken"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/number-of-movements
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "The number of movements to be generated for the part"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/specific-movement
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "Optionally a specific movement can be added to a part"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/rep
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "Optionally number of repetitions for each movement can be given"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/set
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "Optionally number of sets for each movement can be given"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/distance
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "Optionally the distance for each movement can be given"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/duration
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "Optionally the duration for each movement can be given"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/weight
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "Optionally the weight for each movement can be given"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/rest
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "Optionally the rest time between sets can be given"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :part/session-movement
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A stored session has parts with movements"
  :db.install/_attribute :db.part/db}

 ;; category
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :category/name
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/unique             :db.unique/identity
  :db/doc                "A category has a unique name"
  :db.install/_attribute :db.part/db}

 ;; movement
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/unique-name
  :db/fulltext           true
  :db/index              true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/unique             :db.unique/identity
  :db/doc                "Movements in the database has a unique name"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/name
  :db/fulltext           true
  :db/index              true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A movement executed in a session has a name"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/category
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A movement has one or more categories"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/practical
  :db/index              true
  :db/valueType          :db.type/boolean
  :db/cardinality        :db.cardinality/one
  :db/doc                "Should only movements with category Practical Movements be used when refreshing?"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/measurement
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/one
  :db/doc                "A movement has a standard way of logging progress.
                          :measurement/repetitions :measurement/distance :measurement/duration"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/easier
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/many
  :db/doc                "A movement may have easier movements"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/harder
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/many
  :db/doc                "A movement may have harder movements"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/description
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A movement may have a description"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/zone
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/one
  :db/doc                "A given movement belongs to a mastery zone for the user.
                          :zone/one (or no data -> implied :zone/one) reflects the learning phase, a completely new skill.
                          :zone/two is when the skill can be done, but is not perfected. The user is effective, but not efficient.
                          :zone/three is when the skill has been mastered. The user is both effective and efficient.
                          :zone/none is used if the user never wants to see this movement in a session."
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/rep
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "A movement may have repetitions"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/set
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "A movement may have sets"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/duration
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "A movement may have a duration"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/distance
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "A movement may have a distance"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/weight
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "A movement may have a weight"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/rest
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "A movement may have rest time"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :movement/position
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "A movement may be stored with a specified position in a list"
  :db.install/_attribute :db.part/db}

 ;; measurement enums
 {:db/id    #db/id[:db.part/user -1]
  :db/ident :measurement/distance}
 {:db/id    #db/id[:db.part/user -2]
  :db/ident :measurement/duration}
 {:db/id    #db/id[:db.part/user -3]
  :db/ident :measurement/repetitions}

 ;; zone enums
 {:db/id    #db/id[:db.part/user -4]
  :db/ident :zone/one}
 {:db/id    #db/id[:db.part/user -5]
  :db/ident :zone/two}
 {:db/id    #db/id[:db.part/user -6]
  :db/ident :zone/three}
 {:db/id    #db/id[:db.part/user -7]
  :db/ident :zone/none}

 ;; session
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :session/url
  :db/index              true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/unique             :db.unique/identity
  :db/doc                "A session is stored with a unique url"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :session/title
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A session is stored with a title"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :session/template
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "A session may have been generated from a template"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :session/plan
  :db/index              true
  :db/valueType          :db.type/ref
  :db/cardinality        :db.cardinality/one
  :db/doc                "A session may have been part of a plan"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :session/timestamp
  :db/index              true
  :db/valueType          :db.type/instant
  :db/cardinality        :db.cardinality/one
  :db/doc                "A session has a timestamp of when it was finished"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :session/description
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A session might be stored with a description"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :session/part
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/many
  :db/doc                "A session consists of parts"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :session/comment
  :db/index              true
  :db/fulltext           true
  :db/valueType          :db.type/string
  :db/cardinality        :db.cardinality/one
  :db/doc                "A session may have comments"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :session/time
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "A session may be stored with the time taken"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :session/heart-rate
  :db/index              true
  :db/valueType          :db.type/ref
  :db/isComponent        true
  :db/cardinality        :db.cardinality/one
  :db/doc                "A session may be stored with heart rate data"
  :db.install/_attribute :db.part/db}

 ;; heart rate
 {:db/id                 #db/id[:db.part/db]
  :db/ident              :heart-rate/max
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "Max heart rate"
  :db.install/_attribute :db.part/db}

 {:db/id                 #db/id[:db.part/db]
  :db/ident              :heart-rate/average
  :db/index              true
  :db/valueType          :db.type/long
  :db/cardinality        :db.cardinality/one
  :db/doc                "Average heart rate"
  :db.install/_attribute :db.part/db}

 ]





